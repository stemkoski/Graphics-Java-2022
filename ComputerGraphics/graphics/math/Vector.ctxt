#BlueJ class context
comment0.target=Vector
comment0.text=\r\n\ Store\ Vector-related\ data\:\ a\ list\ of\ numbers,\ and\ a\ set\ of\ methods\r\n\ \ \ \ corresponding\ to\ vector\ operations.\r\n
comment1.params=size
comment1.target=Vector(int)
comment1.text=\r\n\ Use\ this\ constructor\ when\ you\ don't\ know\ the\ initial\ values,\r\n\ \ \ but\ you\ do\ know\ the\ size\ (number\ of\ values)\ that\ will\ be\ stored.\r\n
comment10.params=v\ w
comment10.target=Vector\ subtractVectors(Vector,\ Vector)
comment11.params=c
comment11.target=void\ multiplyScalar(double)
comment11.text=\r\n\ Multiply\ all\ the\ values\ in\ this\ vector\ by\ a\ constant.\r\n\ \ Corresponds\ to\ stretching\ or\ shrinking\ this\ vector.\r\n\ \ \r\n\ @param\ c\ constant\ to\ multiply\ values\ by\r\n
comment12.params=c\ v
comment12.target=Vector\ multiplyScalarVector(double,\ Vector)
comment12.text=\r\n\ Multiply\ all\ the\ values\ in\ a\ vector\ by\ a\ constant.\r\n\ \ Corresponds\ to\ stretching\ or\ shrinking\ a\ vector.\r\n\ \ \r\n\ @param\ c\ constant\ to\ multiply\ values\ by\r\n\ @param\ v\ Vector\ being\ multiplied\ by\ a\ constant\r\n
comment13.params=v\ w
comment13.target=double\ dot(Vector,\ Vector)
comment13.text=\r\n\ Calculate\ the\ dot\ product\ of\ two\ vectors\:\r\n\ if\ V\ \=\ (v1,\ v2)\ and\ W\ \=\ (w1,\ w2),\ then\ V\ o\ W\ \=\ v1\ *\ w1\ +\ v2\ *\ w2;\r\n\ Used\ in\ length\ calculations\ and\ matrix\ multiplcations.\r\n
comment14.params=
comment14.target=double\ getLength()
comment14.text=\r\n\ Calculate\ the\ length\ of\ a\ vector.\r\n\ example\:\ if\ V\ \=\ (v1,\ v2),\ then\ length(V)\ \=\ sqrt(\ v1*v1\ +\ v2*v2\ )\ \=\ sqrt(\ dot(\ V,\ V\ )\ )\r\n\ \r\n\ @return\ the\ length\ of\ this\ vector\r\n
comment15.params=vectorArray
comment15.target=float[]\ flattenArray(Vector[])
comment15.text=\r\n\ Take\ any\ number\ of\ vector\ parameters,\ and\ place\ all\ components\ into\ a\ single\ float\ array.\r\n\ example\:\ flattenArray(\ new\ Vector(2,3,5),\ new\ Vector(5,3,7)\ )\r\n\ \ \ \ \ \ \ \ \ \ returns\ [2,\ 3,\ 5,\ \ 5,\ 3,\ 7]\r\n\ This\ is\ the\ format\ required\ by\ OpenGL\ vertex\ buffers.\r\n
comment2.params=x\ y
comment2.target=Vector(double,\ double)
comment3.params=x\ y\ z
comment3.target=Vector(double,\ double,\ double)
comment4.params=x\ y\ z\ w
comment4.target=Vector(double,\ double,\ double,\ double)
comment5.params=
comment5.target=java.lang.String\ toString()
comment6.params=other
comment6.target=boolean\ equals(Vector)
comment7.params=other
comment7.target=void\ addVector(Vector)
comment7.text=\r\n\ Add\ values\ in\ other\ vector\ to\ this\ instance.\r\n\ Note\:\ this\ vector\ and\ other\ vector\ *must*\ have\ same\ number\ of\ components\r\n\ \r\n\ @param\ other\ another\ vector\r\n
comment8.params=v\ w
comment8.target=Vector\ addVectors(Vector,\ Vector)
comment8.text=\r\n\ Create\ a\ new\ vector\ by\ adding\ two\ other\ vectors\ together.\r\n\r\n\ @param\ v\ the\ first\ vector\r\n\ @param\ w\ the\ second\ vector\r\n\ @return\ the\ sum\ of\ the\ vectors\r\n
comment9.params=other
comment9.target=void\ subtractVector(Vector)
numComments=16
