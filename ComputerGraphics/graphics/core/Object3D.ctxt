#BlueJ class context
comment0.target=Object3D
comment0.text=\r\n\ Represents\ any\ object\ that\ has\ a\ position\ and\ orientation\ in\ 3D\ space.\r\n\ Extended\ by\ Group,\ Camera,\ Mesh,\ ...\r\n\ Makes\ use\ of\ tree\ data\ structure\ to\ organize\ objects\ in\ a\ 3D\ scene.\r\n
comment1.params=
comment1.target=Object3D()
comment10.params=deltaA
comment10.target=void\ rotateXLocal(double)
comment11.params=deltaA
comment11.target=void\ rotateXGlobal(double)
comment12.params=deltaA
comment12.target=void\ rotateYLocal(double)
comment13.params=deltaA
comment13.target=void\ rotateYGlobal(double)
comment14.params=s
comment14.target=void\ scale(double)
comment2.params=child
comment2.target=void\ add(Object3D)
comment3.params=child
comment3.target=void\ remove(Object3D)
comment4.params=
comment4.target=java.util.ArrayList\ getDescendentList()
comment4.text=\r\n\ Convert\ Tree\ structure\ into\ a\ List,\ for\ use\ by\ Renderer\ class.\r\n
comment5.params=
comment5.target=graphics.math.Matrix\ getWorldMatrix()
comment5.text=\r\n\ Determine\ where\ this\ object\ is,\ with\ respect\ to\ the\ root\ of\ the\ tree.\r\n\ Accomplished\ by\ multiplying\ all\ matrices\ from\ this\ object,\r\n\ \ \ through\ ancestors\ (parent,\ parent's\ parent,\ ...,\ root).\r\n\r\n\ @return\ matrix\ that\ encodes\ position,\ rotation,\ scale\ data\r\n
comment6.params=
comment6.target=graphics.math.Vector\ getPosition()
comment7.params=position
comment7.target=void\ setPosition(graphics.math.Vector)
comment8.params=deltaX\ deltaY\ deltaZ
comment8.target=void\ translateLocal(double,\ double,\ double)
comment9.params=deltaX\ deltaY\ deltaZ
comment9.target=void\ translateGlobal(double,\ double,\ double)
numComments=15
